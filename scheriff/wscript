#!/usr/bin/env python
import os, copy

try:
    from waflib.extras import symwaf2ic
    from waflib.extras.gtest import summary
    recurse = lambda ctx: None
except ImportError:
    from gtest import summary
    from symwaf2ic import recurse_depends
    recurse = lambda ctx: recurse_depends(depends, ctx)


def depends(ctx):
    ctx('logger')
    ctx('lib-boost-patches')
    ctx('ztl')

def options(opt):
    opt.load('compiler_cxx')
    opt.load('boost')
    opt.load('gtest')
    recurse(opt)


def configure(cfg):
    cfg.load('compiler_cxx')
    cfg.load('boost')
    cfg.load('gtest')
    recurse(cfg)
    cfg.check_boost(lib='system', uselib_store='BOOST4SCHERIFF')


def build(bld):
    recurse(bld)

    cxxflags = [
        #'-fvisibility=hidden', # some time in the future, we want this :)
        '-fvisibility-inlines-hidden',
        ]

    bld(
        target          = 'scheriff_inc',
        use             = 'BOOST4SCHERIFF',
        includes        = '..',
        export_includes = '..'
    )

    bld.objects(
        target          = 'scheriff_obj',
        source          = 'Scheriff.cpp',
        use             = 'logger_obj scheriff_inc boost_patches ZTL',
        export_includes = '.',
        install_path    = '${PREFIX}/lib',
        cxxflags=cxxflags + ['-fPIC']
    )

    bld(
        target       = 'scheriff-test-main',
        features     = 'gtest cxx cxxprogram',
        source       =  bld.path.ant_glob('test/test-*.cpp'),
        use          =  'scheriff_obj logger_obj',
        install_path = '${PREFIX}/bin/tests',
        cxxflags=cxxflags
    )
    bld.add_post_fun(summary)
